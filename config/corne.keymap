/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#include "../zmk-nodefree-config/helper.h"
#include "../zmk-nodefree-config/international_chars/french.dtsi"

ZMK_UNICODE_SINGLE(trema, N0, N0, A, N8)

/ {
        chosen {
                zmk,matrix_transform = &five_column_transform;
        };

        behaviors {
                hm: homerow_mods {
                        compatible = "zmk,behavior-hold-tap";
                        #binding-cells = <2>;
                        tapping-term-ms = <200>;
                        quick_tap_ms = <0>;
                        flavor = "tap-preferred";
                        bindings = <&kp>, <&kp>;
                };
                td_caps: tap_dance_caps {
                        compatible = "zmk,behavior-tap-dance";
                        #binding-cells = <0>;
                        tapping-term-ms = <200>;
                        bindings = <&sk RSHFT>, <&caps_word>;
                };
        };

        combos {
                compatible = "zmk,combos";
                combo-equal {
                        timeout-ms = <50>;
                        key-positions = <25 26>;
                        bindings = <&kp EQUAL>;
                        layers = <0>;
                };
                combo-minus {
                        timeout-ms = <50>;
                        key-positions = <26 27>;
                        bindings = <&kp MINUS>;
                        layers = <0>;
                };
                combo-underscore {
                        timeout-ms = <50>;
                        key-positions = <27 28>;
                        bindings = <&kp UNDERSCORE>;
                        layers = <0>;
                };
        };

        keymap {
                compatible = "zmk,keymap";

                default_layer {
                // -----------------------------------------------------------------------------
                // |  A  |  Z  |   E   |   R   |  T  |      |  Y  |  U    |  I    |  O   |  P  |
                // |  Q  |  S  | D ALT | F GUI |  G  |      |  H  | J GUI | K ALT |  L   |  M  |
                // |  W  |  X  |   C   |   V   |  B  |      |  N [=] . : [-] , ; [_] ? ! | ' ^ |
                //             |  ENT  | LCTRL | [1] |      | SPC | RSHFT | BKSP  |

                        bindings = <
                                &kp A &kp Z &kp E &kp R &kp T                   &kp Y &kp U &kp I &kp O &kp P   
                                &kp Q &kp S &hm LALT D &hm LGUI F &kp G         &kp H &hm RGUI J &hm RALT K &kp L &kp M
                                &kp W &kp X &kp C &kp V &kp B                   &kp N &mt COLON DOT &mt SEMI COMMA &mt EXCL QMARK &mt APOS CARET
                                &kp RET &kp LCTRL &to 1                         &kp SPACE &td_caps &kp BSPC
                        >;
                };

                layer_2 {
                // -----------------------------------------------------------------------
                // | ESC |  "  |  |  |   [   |  *  |      |  &  |  ]  |  ~   |  '  |  ¨  |
                // | TAB |  é  |  #  |   (   |  /  |      |  \  |  )  |  @   |  `  |  ç  |
                // |     |  è  |  ê  |   {   |  <  |      |  >  |  }  |  â   |  à  |  ù  |
                //             | ENT | LSHFT | [2] |      | SPC | [0] | BKSP |

                        bindings = <
                                &kp ESC &kp DQT &kp PIPE &kp LBKT &kp STAR              &kp AMPS &kp RBKT &kp TILDE &kp APOS &trema
                                &kp TAB &fr_e_acute &kp HASH &kp LPAR &kp FSLH          &kp BSLH &kp RPAR &kp AT &kp GRAVE &fr_c_cedilla
                                &none &fr_e_grave &fr_e_circumflex &kp LBRC &kp LT      &kp GT &kp RBRC &fr_a_circumflex &fr_a_grave &fr_u_grave 
                                &kp RET &kp LSHFT &to 2                                    &kp SPACE &to 0 &kp BSPC
                        >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
// | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
// | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
//                    | GUI |     | SPC |   | ENT | [0] | ALT |
                        bindings = <
   &kp  TAB  &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT   &kp CARET &kp AMPS  &kp KP_MULTIPLY &kp LPAR &kp RPAR &kp BSPC
   &kp LCTRL &trans   &trans &trans   &trans   &trans      &kp MINUS &kp EQUAL &kp LBKT        &kp RBKT &kp BSLH &kp GRAVE
   &kp LSHFT &trans   &trans &trans   &trans   &trans      &kp UNDER &kp PLUS  &kp LBRC        &kp RBRC &kp PIPE &kp TILDE
                             &kp LGUI &trans   &kp SPACE   &kp RET   &to 0    &kp RALT
                        >;
                };
        };
};
